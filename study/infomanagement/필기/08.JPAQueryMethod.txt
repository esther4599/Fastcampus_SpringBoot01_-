1. query 메소드 문법

2. query 활용

=====================================================================

1. query 메소드 문법

1) where 조건 붙이는 방법 - 따로 함수를 만드는 방법 (Service)

- personServiceTest
        @Test
        void getPeoplebyName(){
            givenPerson();

            //동명이인 가능성 있으므로 List
            List<Person> people = personService.getPeopleByName("홍길동");
            people.forEach(System.out::println);
        }

-personService
    public List<Person> getPeopleByName(String name){
        List<Person> people = personRepository.findAll();

        return people.stream().filter(person -> person.getName().equals(name)).collect(Collectors.toList());
    }

-test 실행결과
Person(id=1, name=홍길동, age=10, hobby=null, bloodType=A, birthday=null, job=null, block=Block(id=2, name=홍길동, reason=null, startDate=null, endDate=null))
Person(id=3, name=홍길동, age=18, hobby=null, bloodType=O, birthday=null, job=null, block=null)

--------------------------------------

2) where 조건 붙이는 방법 - JpaR 이용해 쿼리 작성하기 (Repository)

-PersonRepository
    List<Person> findByName(String name);

-personService
    public List<Person> getPeopleByName(String name){
        return personRepository.findByName(name);
    }

findByName(String name) => and or 을 이용해 다양한 조건을 추가할 수 있다.
+ is, equals, between, lessthan, lessthanequals, greaterthat,
greaterthatequals, after(Date 검색), isnull 등등

=====================================================================

2. query 활용

1) 전에 만들어둔 exclude 함수 다시 만들기

-PersonRepository
    List<Person> findByBlockIsNull();

-personService
    public List<Person> getPeopleExcludeBlocks(){
        return personRepository.findByBlockIsNull();
    }

--------------------------------------

2) 혈액형으로 사람 찾기

**Repository에 List가 아닌 객체 Person으로 코딩한 경우.

-PersonRepository
    Person findByBloodType(String bloodType);

-personServiceTest
    @Test
    void getPersonByBloodType(){
        givenPerson();
        System.out.println(personRepository.findByBloodType("B"));
    }

-결과
"B"형이 1명이면 오류가 없지만 2명 이상이 되면 오류 발생

----------------

-PersonRepository
    List<Person> findByBloodType(String bloodType);

-personService
    public List<Person> getPeopleExcludeBlocks(){
        personRepository.findByBloodType("B").forEach(System.out::println);
    }

-결과
오류 없음

--------------------------------------

3) 이번 달에 생일인 사람 출력하기

-PersonRepository
    List<Person> findByBirthdayBetween(LocalDate startDate, LocalDate endDate);

-personServiceTest
    @Test
    void findByBirthday(){
        givenPerson();

        List<Person> people = personRepository.findByBirthdayBetween(LocalDate.of(1991, 8,1), LocalDate.of(1991, 8, 31));
        people.forEach(System.out::println);
    }

-결과
생일이 8월인 사람을 찾고 싶었으나 위와 같이 검색하니 1991년 출생자 중 생일이 8월인 사람이 검색된다.
위의 문제는 어떻게 해결해야 할까?